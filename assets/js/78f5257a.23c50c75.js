"use strict";(self.webpackChunk_guidepup_guidepup_dev=self.webpackChunk_guidepup_guidepup_dev||[]).push([[745],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=r.createContext({}),s=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},u=function(t){var e=s(t.components);return r.createElement(l.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,l=t.parentName,u=p(t,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(f,o(o({ref:e},u),{},{components:n})):r.createElement(f,o({ref:e},u))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=d;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=t,p.mdxType="string"==typeof t?t:a,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4886:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return s}});var r=n(3117),a=(n(7294),n(3905));const i={title:"StartOptions"},o=void 0,p={unversionedId:"api/class-start-options",id:"api/class-start-options",title:"StartOptions",description:"Options for starting the Virtual Screen Reader.",source:"@site/docs/api/class-start-options.md",sourceDirName:"api",slug:"/api/class-start-options",permalink:"/docs/api/class-start-options",draft:!1,editUrl:"https://github.com/guidepup/guidepup.dev/tree/main/docs/api/class-start-options.md",tags:[],version:"current",frontMatter:{title:"StartOptions"},sidebar:"api",previous:{title:"Virtual",permalink:"/docs/api/class-virtual"}},l={},s=[{value:"startOptions.container",id:"start-options-container",level:2}],u={toc:s};function c(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Options for starting the Virtual Screen Reader."),(0,a.kt)("p",null,"For example, to use the Virtual Screen Reader against the entire page:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { virtual } from "@guidepup/virtual-screen-reader";\n\ntest("example test", async () => {\n  // Start Virtual on the entire page.\n  await virtual.start({ container: document.body });\n\n  // Stop Virtual.\n  await virtual.stop();\n});\n')),(0,a.kt)("p",null,"To instead use the Virtual Screen Reader within a particular element (with that element included):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { virtual } from "@guidepup/virtual-screen-reader";\nimport { screen } from "@testing-library/dom";\n\ntest("example test", async () => {\n  const container = screen.getByRole("navigation");\n\n  // Start Virtual within a <nav> element in the page.\n  await virtual.start({ container });\n\n  // Stop Virtual.\n  await virtual.stop();\n});\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Contents:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./class-start-options#start-options-container"},"startOptions.container"))),(0,a.kt)("h2",{id:"start-options-container"},"startOptions.container"),(0,a.kt)("p",null,"The bounding HTML element to use the Virtual Screen Reader in."),(0,a.kt)("p",null,"To use the entire page pass ",(0,a.kt)("inlineCode",{parentName:"p"},"document.body"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement",title:"HTMLElement"},"HTMLElement")))}c.isMDXComponent=!0}}]);