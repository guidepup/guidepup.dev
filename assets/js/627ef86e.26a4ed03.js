"use strict";(self.webpackChunk_guidepup_guidepup_dev=self.webpackChunk_guidepup_guidepup_dev||[]).push([[642],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),s=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(a),m=r,h=d["".concat(u,".").concat(m)]||d[m]||c[m]||l;return a?n.createElement(h,i(i({ref:t},p),{},{components:a})):n.createElement(h,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:function(e,t,a){a.d(t,{Z:function(){return i}});var n=a(7294),r=a(6010),l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},5488:function(e,t,a){a.d(t,{Z:function(){return m}});var n=a(3117),r=a(7294),l=a(6010),i=a(2389),o=a(7392),u=a(7094),s=a(2466),p="tabList__CuJ",c="tabItem_LNqP";function d(e){var t;const{lazy:a,block:i,defaultValue:d,values:m,groupId:h,className:v}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=m??f.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),g=(0,o.l)(b,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===d?d:d??(null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)??f[0].props.value;if(null!==k&&!b.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:w}=(0,u.U)(),[S,N]=(0,r.useState)(k),T=[],{blockElementScrollPositionUntilNextRender:x}=(0,s.o5)();if(null!=h){const e=y[h];null!=e&&e!==S&&b.some((t=>t.value===e))&&N(e)}const O=e=>{const t=e.currentTarget,a=T.indexOf(t),n=b[a].value;n!==S&&(x(t),N(n),null!=h&&w(h,String(n)))},j=e=>{var t;let a=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;a=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;a=T[t]??T[T.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":i},v)},b.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:S===t?0:-1,"aria-selected":S===t,key:t,ref:e=>T.push(e),onKeyDown:j,onClick:O},i,{className:(0,l.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":S===t})}),a??t)}))),a?(0,r.cloneElement)(f.filter((e=>e.props.value===S))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==S})))))}function m(e){const t=(0,i.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},3216:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var n=a(3117),r=(a(7294),a(3905)),l=a(5488),i=a(5162);const o={title:"Virtual Screen Reader",description:"Getting started with Guidepup Virtual Screen Reader for screen reader automation in accessibility unit testing"},u="Virtual Screen Reader",s={unversionedId:"virtual",id:"virtual",title:"Virtual Screen Reader",description:"Getting started with Guidepup Virtual Screen Reader for screen reader automation in accessibility unit testing",source:"@site/docs/virtual.md",sourceDirName:".",slug:"/virtual",permalink:"/docs/virtual",draft:!1,editUrl:"https://github.com/guidepup/guidepup.dev/tree/main/docs/virtual.md",tags:[],version:"current",frontMatter:{title:"Virtual Screen Reader",description:"Getting started with Guidepup Virtual Screen Reader for screen reader automation in accessibility unit testing"},sidebar:"docs",previous:{title:"Real World Example",permalink:"/docs/example"},next:{title:"Support Matrix",permalink:"/docs/support"}},p={},c=[{value:"Contents",id:"contents",level:2},{value:"Installation",id:"installation",level:2},{value:"First Virtual Screen Reader Code",id:"first",level:2}],d={toc:c};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"virtual-screen-reader"},"Virtual Screen Reader"),(0,r.kt)("p",null,"Guidepup Virtual Screen Reader is a screen reader simulator for unit tests."),(0,r.kt)("p",null,"This package aims to supplement your testing by enabling you to automate a Virtual Screen Reader for unit test workflows the same you as would for mouse or keyboard based scenarios."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Mirrors Screen Reader Functionality")," - simulate and assert on what users can do when using screen readers."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Test Framework Agnostic")," - run with Jest, with Playwright, as an independent script, no vendor lock-in."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"UI Framework Agnostic")," - want to use React, Vue, Solid, Svelte, etc.? All good here! Works with any UI framework, and plays nicely with the ",(0,r.kt)("a",{parentName:"li",href:"https://testing-library.com/"},"Testing Library")," suite."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Fast Feedback")," - avoid the cumbersome overhead of running an e2e test with a running screen reader by running virtually over the provided DOM.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: This package should not replace your manual screen reader testing, there is no substitute for testing with real screen readers and with real users.")),(0,r.kt)("p",null,"If you are looking to automate real screen readers, check out the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/guidepup/guidepup"},(0,r.kt)("inlineCode",{parentName:"a"},"@guidepup/guidepup"))," package."),(0,r.kt)("p",null,"If you are looking to for quick and easy Jest snapshot testing, check out the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/guidepup/jest"},(0,r.kt)("inlineCode",{parentName:"a"},"@guidepup/jest"))," package."),(0,r.kt)("h2",{id:"contents"},"Contents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./virtual#installation"},"Installation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./virtual#first"},"First Virtual Screen Reader Code"))),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Install Guidepup Virtual Screen Reader to your project:"),(0,r.kt)(l.Z,{groupId:"pm-flavor",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"NPM",value:"npm"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add -D @guidepup/virtual-screen-reader\n"))),(0,r.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev @guidepup/virtual-screen-reader\n")))),(0,r.kt)("h2",{id:"first"},"First Virtual Screen Reader Code"),(0,r.kt)("p",null,"Let's automate our Virtual Screen Reader!"),(0,r.kt)("p",null,"Using ",(0,r.kt)("a",{parentName:"p",href:"https://jestjs.io/"},"Jest")," as our test runner, create ",(0,r.kt)("inlineCode",{parentName:"p"},"example.test.js")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},"example.test.ts")," for TypeScript) to define your screen reader unit test code."),(0,r.kt)(l.Z,{groupId:"js-flavor",defaultValue:"ts",values:[{label:"Typescript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { virtual } from "@guidepup/virtual-screen-reader";\n\ntest("should navigate to the input and announce the placeholder", async () => {\n  document.body.innerHTML = `\n  <label id="label1">Search for topics</label>\n  <input type="text" aria-labelledby="label1" value="" placeholder="Search..."/>\n  `;\n\n  // Start the Virtual Screen Reader.\n  await virtual.start({ container: document.body });\n\n  // Move to the label element.\n  await virtual.next();\n\n  // Move to the input element.\n  await virtual.next();\n\n  // Expect on the spoken phrase for the input element.\n  expect(await virtual.lastSpokenPhrase()).toEqual(\n    "textbox, Search for topics, placeholder Search..."\n  );\n\n  // Stop the Virtual Screen Reader.\n  await virtual.stop();\n});\n'))),(0,r.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const { virtual } = require("@guidepup/virtual-screen-reader");\n\ntest("should navigate to the input and announce the placeholder", async () => {\n  document.body.innerHTML = `\n  <label id="label1">Search for topics</label>\n  <input type="text" aria-labelledby="label1" value="" placeholder="Search..."/>\n  `;\n\n  // Start the Virtual Screen Reader.\n  await virtual.start({ container: document.body });\n\n  // Move to the label element.\n  await virtual.next();\n\n  // Move to the input element.\n  await virtual.next();\n\n  // Expect on the spoken phrase for the input element.\n  expect(await virtual.lastSpokenPhrase()).toEqual(\n    "textbox, Search for topics, placeholder Search..."\n  );\n\n  // Stop the Virtual Screen Reader.\n  await virtual.stop();\n});\n')))),(0,r.kt)("p",null,"Running our test with ",(0,r.kt)("a",{parentName:"p",href:"https://jestjs.io/"},"Jest")," we should see something like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-txt"},"PASS  test/virtual.test.ts\n  \u2713 should navigate to the input and announce the placeholder (42 ms)\n\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        0.361 s\nRan all test suites matching /virtual.test/i.\n\nWatch Usage: Press w to show more.\n")))}m.isMDXComponent=!0}}]);