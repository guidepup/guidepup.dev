"use strict";(self.webpackChunk_guidepup_guidepup_dev=self.webpackChunk_guidepup_guidepup_dev||[]).push([[8474],{7742:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var r=n(4848),a=n(8453),s=n(1470),l=n(9365);const i={title:"Virtual Screen Reader",description:"Getting started with Guidepup Virtual Screen Reader for screen reader automation in accessibility unit testing"},o="Virtual Screen Reader",u={id:"virtual",title:"Virtual Screen Reader",description:"Getting started with Guidepup Virtual Screen Reader for screen reader automation in accessibility unit testing",source:"@site/docs/virtual.md",sourceDirName:".",slug:"/virtual",permalink:"/docs/virtual",draft:!1,unlisted:!1,editUrl:"https://github.com/guidepup/guidepup.dev/tree/main/docs/virtual.md",tags:[],version:"current",frontMatter:{title:"Virtual Screen Reader",description:"Getting started with Guidepup Virtual Screen Reader for screen reader automation in accessibility unit testing"},sidebar:"docs",previous:{title:"Real World Example",permalink:"/docs/example"},next:{title:"Support Matrix",permalink:"/docs/support"}},c={},d=[{value:"Contents",id:"contents",level:2},{value:"Installation",id:"installation",level:2},{value:"First Virtual Screen Reader Code",id:"first",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"virtual-screen-reader",children:"Virtual Screen Reader"})}),"\n",(0,r.jsx)(t.p,{children:"Guidepup Virtual Screen Reader is a screen reader simulator for unit tests."}),"\n",(0,r.jsx)(t.p,{children:"This package aims to supplement your testing by enabling you to automate a Virtual Screen Reader for unit test workflows the same you as would for mouse or keyboard based scenarios."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Mirrors Screen Reader Functionality"})," - simulate and assert on what users can do when using screen readers."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Test Framework Agnostic"})," - run with Jest, Vitest, Web Test Runner, in Storybook, as an independent script, no vendor lock-in."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"UI Framework Agnostic"})," - want to use React, Vue, Solid, Svelte, etc.? All good here! Works with any UI framework, and plays nicely with the ",(0,r.jsx)(t.a,{href:"https://testing-library.com/",children:"Testing Library"})," suite."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Fast Feedback"})," - avoid the cumbersome overhead of running an e2e test with a real screen reader by running virtually over the provided DOM."]}),"\n"]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)("svg",{style:{display:"inline-block",fill:"#fff",verticalAlign:"text-bottom",marginRight:"0.5rem"},viewBox:"0 0 16 16",version:"1.1",width:"16",height:"16","aria-hidden":"true",children:(0,r.jsx)("path",{d:"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v9.5A1.75 1.75 0 0 1 14.25 13H8.06l-2.573 2.573A1.458 1.458 0 0 1 3 14.543V13H1.75A1.75 1.75 0 0 1 0 11.25Zm1.75-.25a.25.25 0 0 0-.25.25v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25Zm7 2.25v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"})})," ",(0,r.jsx)(t.strong,{children:"Important"})]}),"\n",(0,r.jsx)(t.p,{children:"This package should not replace but augment your screen reader testing, there is no substitute for testing with real screen readers and with real users."}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["If you are looking to automate real screen readers, check out the ",(0,r.jsx)(t.a,{href:"https://github.com/guidepup/guidepup",children:(0,r.jsx)(t.code,{children:"@guidepup/guidepup"})})," package."]}),"\n",(0,r.jsxs)(t.p,{children:["If you are looking to for quick and easy Jest snapshot testing, check out the ",(0,r.jsx)(t.a,{href:"https://github.com/guidepup/jest",children:(0,r.jsx)(t.code,{children:"@guidepup/jest"})})," package."]}),"\n",(0,r.jsx)(t.h2,{id:"contents",children:"Contents"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"./virtual#installation",children:"Installation"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"./virtual#first",children:"First Virtual Screen Reader Code"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(t.p,{children:"Install Guidepup Virtual Screen Reader to your project:"}),"\n",(0,r.jsxs)(s.A,{groupId:"pm-flavor",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"NPM",value:"npm"}],children:[(0,r.jsx)(l.A,{value:"yarn",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"yarn add -D @guidepup/virtual-screen-reader\n"})})}),(0,r.jsx)(l.A,{value:"npm",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm install --save-dev @guidepup/virtual-screen-reader\n"})})})]}),"\n",(0,r.jsx)(t.h2,{id:"first",children:"First Virtual Screen Reader Code"}),"\n",(0,r.jsx)(t.p,{children:"Let's automate our Virtual Screen Reader!"}),"\n",(0,r.jsxs)(t.p,{children:["Using ",(0,r.jsx)(t.a,{href:"https://jestjs.io/",children:"Jest"})," as our test runner, create ",(0,r.jsx)(t.code,{children:"example.test.js"})," (or ",(0,r.jsx)(t.code,{children:"example.test.ts"})," for TypeScript) to define your screen reader unit test code."]}),"\n",(0,r.jsxs)(s.A,{groupId:"js-flavor",defaultValue:"ts",values:[{label:"Typescript",value:"ts"},{label:"JavaScript",value:"js"}],children:[(0,r.jsx)(l.A,{value:"ts",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",metastring:'title="./example.test.ts"',children:'import { virtual } from "@guidepup/virtual-screen-reader";\n\ntest("should navigate to the input and announce the placeholder", async () => {\n  document.body.innerHTML = `\n  <label id="label1">Search for topics</label>\n  <input type="text" aria-labelledby="label1" value="" placeholder="Search..."/>\n  `;\n\n  // Start the Virtual Screen Reader.\n  await virtual.start({ container: document.body });\n\n  // Move to the label element.\n  await virtual.next();\n\n  // Move to the input element.\n  await virtual.next();\n\n  // Expect on the spoken phrase for the input element.\n  expect(await virtual.lastSpokenPhrase()).toEqual(\n    "textbox, Search for topics, placeholder Search..."\n  );\n\n  // Stop the Virtual Screen Reader.\n  await virtual.stop();\n});\n'})})}),(0,r.jsx)(l.A,{value:"js",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",metastring:'title="./example.test.js"',children:'const { virtual } = require("@guidepup/virtual-screen-reader");\n\ntest("should navigate to the input and announce the placeholder", async () => {\n  document.body.innerHTML = `\n  <label id="label1">Search for topics</label>\n  <input type="text" aria-labelledby="label1" value="" placeholder="Search..."/>\n  `;\n\n  // Start the Virtual Screen Reader.\n  await virtual.start({ container: document.body });\n\n  // Move to the label element.\n  await virtual.next();\n\n  // Move to the input element.\n  await virtual.next();\n\n  // Expect on the spoken phrase for the input element.\n  expect(await virtual.lastSpokenPhrase()).toEqual(\n    "textbox, Search for topics, placeholder Search..."\n  );\n\n  // Stop the Virtual Screen Reader.\n  await virtual.stop();\n});\n'})})})]}),"\n",(0,r.jsxs)(t.p,{children:["Running our test with ",(0,r.jsx)(t.a,{href:"https://jestjs.io/",children:"Jest"})," we should see something like:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-txt",children:"PASS  test/virtual.test.ts\n  \u2713 should navigate to the input and announce the placeholder (42 ms)\n\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        0.361 s\nRan all test suites matching /virtual.test/i.\n\nWatch Usage: Press w to show more.\n"})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>l});n(6540);var r=n(4164);const a={tabItem:"tabItem_Ymn6"};var s=n(4848);function l(e){let{children:t,hidden:n,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,l),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>w});var r=n(6540),a=n(4164),s=n(3104),l=n(6347),i=n(205),o=n(7485),u=n(1682),c=n(679);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}(n);return function(e){const t=(0,u.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function v(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=h(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[u,d]=m({queryString:n,groupId:a}),[v,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,c.Dv)(n);return[a,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),f=(()=>{const e=u??v;return p({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{f&&o(f)}),[f]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),b(e)}),[d,b,s]),tabValues:s}}var b=n(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=n(4848);function x(e){let{className:t,block:n,selectedValue:r,selectValue:l,tabValues:i}=e;const o=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.a_)(),c=e=>{const t=e.currentTarget,n=o.indexOf(t),a=i[n].value;a!==r&&(u(t),l(a))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>o.push(e),onKeyDown:d,onClick:c,...s,className:(0,a.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:s}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function y(e){const t=v(e);return(0,g.jsxs)("div",{className:(0,a.A)("tabs-container",f.tabList),children:[(0,g.jsx)(x,{...t,...e}),(0,g.jsx)(j,{...t,...e})]})}function w(e){const t=(0,b.A)();return(0,g.jsx)(y,{...e,children:d(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var r=n(6540);const a={},s=r.createContext(a);function l(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);