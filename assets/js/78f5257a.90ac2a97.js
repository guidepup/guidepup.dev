"use strict";(self.webpackChunk_guidepup_guidepup_dev=self.webpackChunk_guidepup_guidepup_dev||[]).push([[9710],{7808:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(4848),s=n(8453);const i={title:"StartOptions"},a=void 0,o={id:"api/class-start-options",title:"StartOptions",description:"Options for starting the Virtual Screen Reader.",source:"@site/docs/api/class-start-options.md",sourceDirName:"api",slug:"/api/class-start-options",permalink:"/docs/api/class-start-options",draft:!1,unlisted:!1,editUrl:"https://github.com/guidepup/guidepup.dev/tree/main/docs/api/class-start-options.md",tags:[],version:"current",frontMatter:{title:"StartOptions"},sidebar:"api",previous:{title:"Virtual",permalink:"/docs/api/class-virtual"}},l={},c=[{value:"startOptions.container",id:"start-options-container",level:2},{value:"startOptions.window",id:"start-options-window",level:2},{value:"startOptions.displayCursor",id:"start-options-display-cursor",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Options for starting the Virtual Screen Reader."}),"\n",(0,r.jsx)(t.p,{children:"For example, to use the Virtual Screen Reader against the entire page:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'import { virtual } from "@guidepup/virtual-screen-reader";\n\ntest("example test", async () => {\n  // Start Virtual on the entire page.\n  await virtual.start({ container: document.body });\n\n  // Stop the Virtual Screen Reader.\n  await virtual.stop();\n});\n'})}),"\n",(0,r.jsx)(t.p,{children:"To instead use the Virtual Screen Reader within a particular element (with that element included):"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'import { virtual } from "@guidepup/virtual-screen-reader";\nimport { screen } from "@testing-library/dom";\n\ntest("example test", async () => {\n  const container = screen.getByRole("navigation");\n\n  // Start Virtual within a <nav> element in the page.\n  await virtual.start({ container });\n\n  // Stop the Virtual Screen Reader.\n  await virtual.stop();\n});\n'})}),"\n",(0,r.jsxs)(t.p,{children:["If using in a headed browser environment such as ",(0,r.jsx)(t.a,{href:"https://storybook.js.org/",children:"Storybook"}),", you can also opt-in to having the virtual cursor displayed visually:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'import { virtual } from "@guidepup/virtual-screen-reader";\n\ntest("example test", async () => {\n  // Start Virtual on the entire page with the virtual cursor displayed visually.\n  await virtual.start({ container: document.body, displayCursor: true });\n\n  // Stop the Virtual Screen Reader.\n  await virtual.stop();\n});\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Contents:"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"./class-start-options#start-options-container",children:"startOptions.container"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"./class-start-options#start-options-window",children:"startOptions.window"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"./class-start-options#start-options-display-cursor",children:"startOptions.displayCursor"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"start-options-container",children:"startOptions.container"}),"\n",(0,r.jsx)(t.p,{children:"The bounding HTML element to use the Virtual Screen Reader in."}),"\n",(0,r.jsxs)(t.p,{children:["To use the entire page pass ",(0,r.jsx)(t.code,{children:"document.body"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Type:"})," ",(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement",title:"HTMLElement",children:"HTMLElement"})]}),"\n",(0,r.jsx)(t.h2,{id:"start-options-window",children:"startOptions.window"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Optional:"})," The window instance."]}),"\n",(0,r.jsxs)(t.p,{children:["Only required if the ",(0,r.jsx)(t.code,{children:"window"})," instance is not already globally available. For example, when you are in a Node environment and using a custom DOM implementation that is not attached to the global scope."]}),"\n",(0,r.jsxs)(t.p,{children:["Defaults to using the global ",(0,r.jsx)(t.code,{children:"window"})," instance."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Type:"})," ",(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window",title:"Window",children:"Window"})]}),"\n",(0,r.jsx)(t.h2,{id:"start-options-display-cursor",children:"startOptions.displayCursor"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Optional:"})," Display the Virtual Screen Reader cursor visually on the target element."]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"Note: There is a performance overhead to visually rendering the cursor."}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Type:"})," ",(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",title:"boolean",children:"boolean"})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(6540);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);