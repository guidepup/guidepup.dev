"use strict";(self.webpackChunk_guidepup_guidepup_dev=self.webpackChunk_guidepup_guidepup_dev||[]).push([[213],{3905:function(e,t,o){o.d(t,{Zo:function(){return l},kt:function(){return u}});var a=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function p(e,t){if(null==e)return{};var o,a,r=function(e,t){if(null==e)return{};var o,a,r={},n=Object.keys(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},l=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},v={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var o=e.components,r=e.mdxType,n=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=c(o),u=r,k=m["".concat(s,".").concat(u)]||m[u]||v[u]||n;return o?a.createElement(k,i(i({ref:t},l),{},{components:o})):a.createElement(k,i({ref:t},l))}));function u(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=o.length,i=new Array(n);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var c=2;c<n;c++)i[c]=o[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,o)}m.displayName="MDXCreateElement"},2905:function(e,t,o){o.r(t),o.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return v},frontMatter:function(){return n},metadata:function(){return p},toc:function(){return c}});var a=o(3117),r=(o(7294),o(3905));const n={title:"VoiceOverCaption"},i=void 0,p={unversionedId:"api/class-voiceover-caption",id:"api/class-voiceover-caption",title:"VoiceOverCaption",description:"Implements: [ScreenReaderCaption]",source:"@site/docs/api/class-voiceover-caption.md",sourceDirName:"api",slug:"/api/class-voiceover-caption",permalink:"/docs/api/class-voiceover-caption",draft:!1,editUrl:"https://github.com/guidepup/guidepup.dev/tree/main/docs/api/class-voiceover-caption.md",tags:[],version:"current",frontMatter:{title:"VoiceOverCaption"},sidebar:"api",previous:{title:"ScreenReader",permalink:"/docs/api/class-screenreader"},next:{title:"VoiceOverCommanderCommands",permalink:"/docs/api/class-voiceover-commander-commands"}},s={},c=[{value:"voiceOverCaption.copyLastSpokenPhrase(options)",id:"voiceover-caption-copy-last-spoken-phrase",level:2},{value:"voiceOverCaption.itemText()",id:"voiceover-caption-item-text",level:2},{value:"voiceOverCaption.itemTextLog()",id:"voiceover-caption-item-text-log",level:2},{value:"voiceOverCaption.lastSpokenPhrase()",id:"voiceover-caption-last-spoken-phrase",level:2},{value:"voiceOverCaption.saveLastSpokenPhrase(options)",id:"voiceover-caption-save-last-spoken-phrase",level:2},{value:"voiceOverCaption.spokenPhraseLog()",id:"voiceover-caption-spoken-phrase-log",level:2}],l={toc:c};function v(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Implements:")," ",(0,r.kt)("a",{parentName:"p",href:"./class-screenreader-caption",title:"ScreenReaderCaption"},"ScreenReaderCaption")),(0,r.kt)("p",null,"Class for VoiceOver caption operations."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { voiceOver } from "@guidepup/guidepup";\n\nconst voiceOverCaption = voiceOver.caption;\n\n// ... perform caption commands.\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Contents:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./class-voiceover-caption#voiceover-caption-copy-last-spoken-phrase"},"voiceOverCaption.copyLastSpokenPhrase([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./class-voiceover-caption#voiceover-caption-item-text"},"voiceOverCaption.itemText()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./class-voiceover-caption#voiceover-caption-item-text-log"},"voiceOverCaption.itemTextLog()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./class-voiceover-caption#voiceover-caption-last-spoken-phrase"},"voiceOverCaption.lastSpokenPhrase()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./class-voiceover-caption#voiceover-caption-save-last-spoken-phrase"},"voiceOverCaption.saveLastSpokenPhrase([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./class-voiceover-caption#voiceover-caption-spoken-phrase-log"},"voiceOverCaption.spokenPhraseLog()"))),(0,r.kt)("h2",{id:"voiceover-caption-copy-last-spoken-phrase"},"voiceOverCaption.copyLastSpokenPhrase(","[options]",")"),(0,r.kt)("p",null,'Copy the last spoken phrase to the Clipboard (also called the "Pasteboard").'),(0,r.kt)("p",null,"This command is specific to the VoiceOver screen reader."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { voiceOver } from "@guidepup/guidepup";\n\n(async () => {\n  // Start VoiceOver.\n  await voiceOver.start();\n\n  // Move to the next item.\n  await voiceOver.next();\n\n  // Copy the phrase spoken by VoiceOver from moving to the next item above to\n  // the Clipboard.\n  await voiceOver.caption.copyLastSpokenPhrase();\n\n  // Stop VoiceOver.\n  await voiceOver.stop();\n})();\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Optional:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("a",{parentName:"li",href:"./class-command-options",title:"CommandOptions"},"CommandOptions"),">"," Additional options.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ","<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),">",">"),(0,r.kt)("h2",{id:"voiceover-caption-item-text"},"voiceOverCaption.itemText()"),(0,r.kt)("p",null,"Get the text of the item in the VoiceOver cursor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { voiceOver } from "@guidepup/guidepup";\n\n(async () => {\n  // Start VoiceOver.\n  await voiceOver.start();\n\n  // Move to the next item.\n  await voiceOver.next();\n\n  // Get the text (if any) for the item currently in focus by the VoiceOver\n  // cursor.\n  const itemText = await voiceOver.caption.itemText();\n  console.log(itemText);\n\n  // Stop VoiceOver.\n  await voiceOver.stop();\n})();\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," we recommend using the equivalent method on the base VoiceOver class instead of using this method on the VoiceOver caption class:"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const itemText = await voiceOver.itemText();\n")),(0,r.kt)("p",{parentName:"blockquote"},"See ",(0,r.kt)("a",{parentName:"p",href:"./class-voiceover",title:"VoiceOver"},"VoiceOver")," for further details.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ","<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),">",">"," The item's text."),(0,r.kt)("h2",{id:"voiceover-caption-item-text-log"},"voiceOverCaption.itemTextLog()"),(0,r.kt)("p",null,"Get the log of all visited item text for this VoiceOver instance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { voiceOver } from "@guidepup/guidepup";\n\n(async () => {\n  // Start VoiceOver.\n  await voiceOver.start();\n\n  // Move through several items.\n  for (let i = 0; i < 10; i++) {\n    await voiceOver.next();\n  }\n\n  // Get the text (if any) for all the items visited by the VoiceOver cursor.\n  const itemTextLog = await voiceOver.caption.itemTextLog();\n  console.log(itemTextLog);\n\n  // Stop VoiceOver.\n  await voiceOver.stop();\n})();\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," we recommend using the equivalent method on the base VoiceOver class instead of using this method on the VoiceOver caption class:"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const itemTextLog = await voiceOver.itemTextLog();\n")),(0,r.kt)("p",{parentName:"blockquote"},"See ",(0,r.kt)("a",{parentName:"p",href:"./class-voiceover",title:"VoiceOver"},"VoiceOver")," for further details.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ","<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",title:"Array"},"Array"),"<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),">>",">"," The item text log."),(0,r.kt)("h2",{id:"voiceover-caption-last-spoken-phrase"},"voiceOverCaption.lastSpokenPhrase()"),(0,r.kt)("p",null,"Get the last spoken phrase."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { voiceOver } from "@guidepup/guidepup";\n\n(async () => {\n  // Start VoiceOver.\n  await voiceOver.start();\n\n  // Move to the next item.\n  await voiceOver.next();\n\n  // Get the phrase spoken by VoiceOver from moving to the next item above.\n  const lastSpokenPhrase = await voiceOver.caption.lastSpokenPhrase();\n  console.log(lastSpokenPhrase);\n\n  // Stop VoiceOver.\n  await voiceOver.stop();\n})();\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," we recommend using the equivalent method on the base VoiceOver class instead of using this method on the VoiceOver caption class:"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const lastSpokenPhrase = await voiceOver.lastSpokenPhrase();\n")),(0,r.kt)("p",{parentName:"blockquote"},"See ",(0,r.kt)("a",{parentName:"p",href:"./class-voiceover",title:"VoiceOver"},"VoiceOver")," for further details.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ","<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),">",">"," The last spoken phrase."),(0,r.kt)("h2",{id:"voiceover-caption-save-last-spoken-phrase"},"voiceOverCaption.saveLastSpokenPhrase(","[options]",")"),(0,r.kt)("p",null,"Save the last spoken phrase and the crash log to a file on the desktop for troubleshooting."),(0,r.kt)("p",null,"This command is specific to the VoiceOver screen reader."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { voiceOver } from "@guidepup/guidepup";\n\n(async () => {\n  // Start VoiceOver.\n  await voiceOver.start();\n\n  // Move to the next item.\n  await voiceOver.next();\n\n  // Save the phrase spoken by VoiceOver from moving to the next item above to\n  // a file on the desktop.\n  await voiceOver.caption.saveLastSpokenPhrase();\n\n  // Stop VoiceOver.\n  await voiceOver.stop();\n})();\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Optional:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("a",{parentName:"li",href:"./class-command-options",title:"CommandOptions"},"CommandOptions"),">"," Additional options.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ","<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),">",">"),(0,r.kt)("h2",{id:"voiceover-caption-spoken-phrase-log"},"voiceOverCaption.spokenPhraseLog()"),(0,r.kt)("p",null,"Get the log of all spoken phrases for this VoiceOver instance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { voiceOver } from "@guidepup/guidepup";\n\n(async () => {\n  // Start VoiceOver.\n  await voiceOver.start();\n\n  // Move through several items.\n  for (let i = 0; i < 10; i++) {\n    await voiceOver.next();\n  }\n\n  // Get the phrase spoken by VoiceOver from moving through the items above.\n  const spokenPhraseLog = await voiceOver.caption.spokenPhraseLog();\n  console.log(spokenPhraseLog);\n\n  // Stop VoiceOver.\n  await voiceOver.stop();\n})();\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," we recommend using the equivalent method on the base VoiceOver class instead of using this method on the VoiceOver caption class:"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const spokenPhraseLog = await voiceOver.spokenPhraseLog();\n")),(0,r.kt)("p",{parentName:"blockquote"},"See ",(0,r.kt)("a",{parentName:"p",href:"./class-voiceover",title:"VoiceOver"},"VoiceOver")," for further details.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ","<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",title:"Array"},"Array"),"<",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),">>",">"," The spoken phrase log."))}v.isMDXComponent=!0}}]);